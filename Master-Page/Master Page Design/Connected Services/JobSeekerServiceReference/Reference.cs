//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Master_Page_Design.JobSeekerServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/MyDBService")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Listing", Namespace="http://schemas.datacontract.org/2004/07/MyDBService.Entity")]
    [System.SerializableAttribute()]
    public partial class Listing : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatergoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExperienceRequriedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpirationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HideOrganisationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OverviewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualificationsRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequirementsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponsibilitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SalaryRangeEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SalaryRangeStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VacancyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Catergories {
            get {
                return this.CatergoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.CatergoriesField, value) != true)) {
                    this.CatergoriesField = value;
                    this.RaisePropertyChanged("Catergories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExperienceRequried {
            get {
                return this.ExperienceRequriedField;
            }
            set {
                if ((object.ReferenceEquals(this.ExperienceRequriedField, value) != true)) {
                    this.ExperienceRequriedField = value;
                    this.RaisePropertyChanged("ExperienceRequried");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Expiration {
            get {
                return this.ExpirationField;
            }
            set {
                if ((this.ExpirationField.Equals(value) != true)) {
                    this.ExpirationField = value;
                    this.RaisePropertyChanged("Expiration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HideOrganisation {
            get {
                return this.HideOrganisationField;
            }
            set {
                if ((object.ReferenceEquals(this.HideOrganisationField, value) != true)) {
                    this.HideOrganisationField = value;
                    this.RaisePropertyChanged("HideOrganisation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Level {
            get {
                return this.LevelField;
            }
            set {
                if ((object.ReferenceEquals(this.LevelField, value) != true)) {
                    this.LevelField = value;
                    this.RaisePropertyChanged("Level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Overview {
            get {
                return this.OverviewField;
            }
            set {
                if ((object.ReferenceEquals(this.OverviewField, value) != true)) {
                    this.OverviewField = value;
                    this.RaisePropertyChanged("Overview");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QualificationsRequired {
            get {
                return this.QualificationsRequiredField;
            }
            set {
                if ((object.ReferenceEquals(this.QualificationsRequiredField, value) != true)) {
                    this.QualificationsRequiredField = value;
                    this.RaisePropertyChanged("QualificationsRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Requirements {
            get {
                return this.RequirementsField;
            }
            set {
                if ((object.ReferenceEquals(this.RequirementsField, value) != true)) {
                    this.RequirementsField = value;
                    this.RaisePropertyChanged("Requirements");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Responsibilities {
            get {
                return this.ResponsibilitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponsibilitiesField, value) != true)) {
                    this.ResponsibilitiesField = value;
                    this.RaisePropertyChanged("Responsibilities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SalaryRangeEnd {
            get {
                return this.SalaryRangeEndField;
            }
            set {
                if ((this.SalaryRangeEndField.Equals(value) != true)) {
                    this.SalaryRangeEndField = value;
                    this.RaisePropertyChanged("SalaryRangeEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SalaryRangeStart {
            get {
                return this.SalaryRangeStartField;
            }
            set {
                if ((this.SalaryRangeStartField.Equals(value) != true)) {
                    this.SalaryRangeStartField = value;
                    this.RaisePropertyChanged("SalaryRangeStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Vacancy {
            get {
                return this.VacancyField;
            }
            set {
                if ((this.VacancyField.Equals(value) != true)) {
                    this.VacancyField = value;
                    this.RaisePropertyChanged("Vacancy");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="JobSeekerServiceReference.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        Master_Page_Design.JobSeekerServiceReference.CompositeType GetDataUsingDataContract(Master_Page_Design.JobSeekerServiceReference.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<Master_Page_Design.JobSeekerServiceReference.CompositeType> GetDataUsingDataContractAsync(Master_Page_Design.JobSeekerServiceReference.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllListing", ReplyAction="http://tempuri.org/IService1/GetAllListingResponse")]
        Master_Page_Design.JobSeekerServiceReference.Listing[] GetAllListing();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllListing", ReplyAction="http://tempuri.org/IService1/GetAllListingResponse")]
        System.Threading.Tasks.Task<Master_Page_Design.JobSeekerServiceReference.Listing[]> GetAllListingAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListingById", ReplyAction="http://tempuri.org/IService1/GetListingByIdResponse")]
        Master_Page_Design.JobSeekerServiceReference.Listing GetListingById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListingById", ReplyAction="http://tempuri.org/IService1/GetListingByIdResponse")]
        System.Threading.Tasks.Task<Master_Page_Design.JobSeekerServiceReference.Listing> GetListingByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateListing", ReplyAction="http://tempuri.org/IService1/CreateListingResponse")]
        int CreateListing(
                    int id, 
                    string title, 
                    string location, 
                    string type, 
                    string experienceRequired, 
                    double salaryRangeStart, 
                    double salaryRangeEnd, 
                    string overview, 
                    string responsibilities, 
                    string requirements, 
                    string level, 
                    string qualificationsRequired, 
                    string catergories, 
                    System.DateTime expiration, 
                    int vacancy, 
                    string hideOrganisation, 
                    System.DateTime createdDate, 
                    int Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateListing", ReplyAction="http://tempuri.org/IService1/CreateListingResponse")]
        System.Threading.Tasks.Task<int> CreateListingAsync(
                    int id, 
                    string title, 
                    string location, 
                    string type, 
                    string experienceRequired, 
                    double salaryRangeStart, 
                    double salaryRangeEnd, 
                    string overview, 
                    string responsibilities, 
                    string requirements, 
                    string level, 
                    string qualificationsRequired, 
                    string catergories, 
                    System.DateTime expiration, 
                    int vacancy, 
                    string hideOrganisation, 
                    System.DateTime createdDate, 
                    int Active);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Master_Page_Design.JobSeekerServiceReference.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Master_Page_Design.JobSeekerServiceReference.IService1>, Master_Page_Design.JobSeekerServiceReference.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public Master_Page_Design.JobSeekerServiceReference.CompositeType GetDataUsingDataContract(Master_Page_Design.JobSeekerServiceReference.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<Master_Page_Design.JobSeekerServiceReference.CompositeType> GetDataUsingDataContractAsync(Master_Page_Design.JobSeekerServiceReference.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public Master_Page_Design.JobSeekerServiceReference.Listing[] GetAllListing() {
            return base.Channel.GetAllListing();
        }
        
        public System.Threading.Tasks.Task<Master_Page_Design.JobSeekerServiceReference.Listing[]> GetAllListingAsync() {
            return base.Channel.GetAllListingAsync();
        }
        
        public Master_Page_Design.JobSeekerServiceReference.Listing GetListingById(int id) {
            return base.Channel.GetListingById(id);
        }
        
        public System.Threading.Tasks.Task<Master_Page_Design.JobSeekerServiceReference.Listing> GetListingByIdAsync(int id) {
            return base.Channel.GetListingByIdAsync(id);
        }
        
        public int CreateListing(
                    int id, 
                    string title, 
                    string location, 
                    string type, 
                    string experienceRequired, 
                    double salaryRangeStart, 
                    double salaryRangeEnd, 
                    string overview, 
                    string responsibilities, 
                    string requirements, 
                    string level, 
                    string qualificationsRequired, 
                    string catergories, 
                    System.DateTime expiration, 
                    int vacancy, 
                    string hideOrganisation, 
                    System.DateTime createdDate, 
                    int Active) {
            return base.Channel.CreateListing(id, title, location, type, experienceRequired, salaryRangeStart, salaryRangeEnd, overview, responsibilities, requirements, level, qualificationsRequired, catergories, expiration, vacancy, hideOrganisation, createdDate, Active);
        }
        
        public System.Threading.Tasks.Task<int> CreateListingAsync(
                    int id, 
                    string title, 
                    string location, 
                    string type, 
                    string experienceRequired, 
                    double salaryRangeStart, 
                    double salaryRangeEnd, 
                    string overview, 
                    string responsibilities, 
                    string requirements, 
                    string level, 
                    string qualificationsRequired, 
                    string catergories, 
                    System.DateTime expiration, 
                    int vacancy, 
                    string hideOrganisation, 
                    System.DateTime createdDate, 
                    int Active) {
            return base.Channel.CreateListingAsync(id, title, location, type, experienceRequired, salaryRangeStart, salaryRangeEnd, overview, responsibilities, requirements, level, qualificationsRequired, catergories, expiration, vacancy, hideOrganisation, createdDate, Active);
        }
    }
}
